#<IfModule dir_module>
#    DirectoryIndex index.php index.html
#</IfModule>
#AddDefaultCharset UTF-8
#AddCharset UTF-8 .html
#<FilesMatch "\.(html)$">
#   Header set Cache-Control: "no-cache, no-store"
#   Header unset ETag
#</FilesMatch>
#Header set X-Content-Type-Options nosniff

#Redirect /index.php /test.php
#Redirect /index1.php /test1.php
#Redirect /index2.php /test2.php
#Redirect /index3.php /test3.php
#Redirect /index.php http://site.com

RewriteEngine On
RewriteBase /
#RewriteRule ^test\.php index.php
#RewriteRule ^dir/ index.php

#Выполните редирект всех запросов к папке dir1 на страницу index1.php, всех запросов к папке dir2 на страницу index2.php. .
#RewriteRule ^dir1/ index1.php
#RewriteRule ^dir2/ index2.php

#Выполните редирект всех файлов, заканчивающихся на .html, на страницу index.php.
#RewriteRule .html$ index.php

#Выполните редирект всех файлов, заканчивающихся на .php, на страницу index.php.
#RewriteRule .php$ index.php

#Выполните редирект всех файлов, заканчивающихся на .html или .php, на страницу index.php.
#RewriteRule .(html|php)$ index.php

#Выполните редирект всех файлов, заканчивающихся на .html на такие же файлы, но с расширением .php.
#RewriteRule (.*).html$ $1.php

#Выполните редирект всех запросов к вашему сайту на такие же запросы, но на сайте http://site.com.
#RewriteRule (.*)\.(.*) http://site.com/$1.$2

#Выполните редирект страницы index1.php на страницу 1.php, страницы index2.php на страницу 2.php,
#страницы index3.php на страницу 3.php. Решите задачу с помощью одной директивы RedirectMatch.
#RedirectMatch index(.*).php $1.php ?????

#Выполните редирект всех запросов, которые содержат в адресе /dir/, на страницу index.php.
#RewriteRule ^dir/ index.php

#Выполните редирект всех запросов, которые содержат в адресе текст dir, на страницу index.php.
#RewriteRule (dir) index.php

#Выполните редирект всех запросов, которые заканчиваются на /dir/, на страницу index.php.
#RewriteRule dir/$ index.php

#Выполните редирект всех страниц вида test0.php на index.php. Вместо 0 может быть любая цифра.
#RewriteRule test(\d)?\.php index.php

#Выполните редирект всех страниц вида test0.php на index.php. Вместо 0 может быть любое число.
#RewriteRule test(\d)+\.php index.php

#Выполните редирект всех страниц содержащих /0/ на index.php. Вместо 0 может быть любое число.
#RewriteRule \d/ index.php

#Выполните редирект всех страниц, кроме страницы test.php, на index.php.
#RewriteRule !test\.php index.php

#Выполните редирект всех файлов, НЕ заканчивающихся на .html, на index.php.
#RewriteRule !(.*)\.html index.php

#Выполните редирект всех запросов, НЕ начинающихся на /webroot/ на страницу index.php.
#RewriteRule !^webroot/ index.php

#RewriteCond %{REQUEST_URI} \.php$
#RewriteCond %{REQUEST_URI} ^/dir/
#RewriteRule .+ index.php

#Выполните редирект всех файлов, заканчивающихся на .html, на index.php.
#RewriteCond %{REQUEST_URI} \.html$
#RewriteRule .+ index.php

#Выполните редирект всех файлов, НЕ заканчивающихся на .html, на index.php.
#RewriteCond %{REQUEST_URI} !\.html$
#RewriteRule .+ index.php

#Выполните редирект всех файлов, имеющих расширение .html и адрес которых начинается с /content/, на index.php.
#RewriteCond %{REQUEST_URI} \.html$
#RewriteCond %{REQUEST_URI} ^/content/
#RewriteRule .+ index.php


#Выполните редирект всех файлов, имеющих расширение .html ИЛИ расширение .php, на index.php.
#RewriteCond %{REQUEST_URI} \.html$ [OR]
#RewriteCond %{REQUEST_URI} \.php$
#RewriteRule .+ index.php

#Выполните редирект всех файлов, имеющих расширение .css ИЛИ путь к которым начинается с /styles/, на index.php.
#RewriteCond %{REQUEST_URI} \.css$ [OR]
#RewriteCond %{REQUEST_URI} ^/styles/
#RewriteRule .+ index.php

#RewriteCond %{REQUEST_FILENAME} -f #файлик
#RewriteCond %{REQUEST_FILENAME} -d #папка
#RewriteCond %{REQUEST_FILENAME} -s #ненулевой файлик
#RewriteCond %{REQUEST_FILENAME} !-f #не существующий файлик
#RewriteCond %{REQUEST_FILENAME} !-d #не существующая папка
#
##Выполните редирект всех запросов, являющихся существующими файлами, на index.php.
#RewriteCond %{REQUEST_FILENAME} -f #файлик
#RewriteRule .+ index.php
#
##Выполните редирект всех запросов, НЕ являющихся существующими файлами, на index.php.
#RewriteCond %{REQUEST_FILENAME} !-f #файлик
#RewriteRule .+ index.php
#
##Выполните редирект всех запросов, НЕ являющихся существующими папками, на index.php.
#RewriteCond %{REQUEST_FILENAME} !-d #файлик
#RewriteRule .+ index.php
#
##Выполните редирект всех запросов, являющихся существующими файлами и имеющим расширение .html, на index.php.
#RewriteCond %{REQUEST_FILENAME} -f #файлик
#RewriteCond %{REQUEST_URI} \.html$
#RewriteRule .+ index.php
#
##Выполните редирект всех запросов, НЕ являющихся существующими файлами и папками, на index.php.
#RewriteCond %{REQUEST_FILENAME} !-d #файлик
#RewriteCond %{REQUEST_FILENAME} !-f #файлик
#RewriteRule .+ index.php

#RewriteCond %{REQUEST_URI} \.html$ [L] - ФЛАГ L останавливает выполнение
#RewriteRule (.+) index.php?get=$1

#Выполните редирект всех запросов, положив запрошенный адрес в карман и передав GET-параметром, на страницу index.php.
#RewriteRule (.+) index.php?get=$1

#Выполните редирект всех запросов на index.php, положив запрошенный адрес в карман и передав GET-параметром в index.php.
#RewriteCond %{REQUEST_URI} !^/index\.php$
#RewriteRule (.+) index.php?get=$1

#RewriteCond %{REQUEST_URI} !^/index\.php$
#RewriteRule (.+) index.php?get=%1 - % из RewriteCond $1 RewriteRule

#Выполните редирект запроса test.php на index.php. Сделайте так, чтобы адрес зарпоса можно было набрать в любом регистре.
#RewriteCond %{REQUEST_URI} !^/index\.php$
#RewriteRule (.+) index.php?get=%1

#Сделайте так, чтобы в случае 404 ошибки, пользователю показывался файл 404.php.
#ErrorDocument 404 /404.php

#Дана папка test. Закройте прямой доступ к этой папке.
deny from all